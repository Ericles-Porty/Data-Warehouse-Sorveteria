-- BRIDGE ADICIONAL
CREATE SEQUENCE SQ_GRUPO_ADICIONAL START WITH 1 INCREMENT BY 1

GO
CREATE OR ALTER PROCEDURE SP_ETL_STAGING_TO_OLAP_BRIDGE_ADICIONAL
AS
BEGIN
	DECLARE @ID_ITENS INT, @ID_ADICIONAIS INT, @ID_GRUPO_BRIDGE INT, @ID_ADICIONAL_GRUPO INT
	DECLARE @QTD_ADICIONAIS NUMERIC(10,2), @ID_GRUPO_ADICIONAL INT, @FLAG INT

	DECLARE C_ITENS CURSOR FOR 
		SELECT DISTINCT ID_ITEM FROM AUX_ITEM_ADICIONAL

	OPEN C_ITENS
	FETCH C_ITENS INTO @ID_ITENS

	-- CURSOR FOR ITERATE ITEMS
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @QTD_ADICIONAIS = (SELECT COUNT(*) FROM AUX_ITEM_ADICIONAL WHERE ID_ITEM = @ID_ITENS)

		DECLARE C_ADICIONAIS SCROLL CURSOR FOR 
			SELECT ID_ADICIONAL FROM AUX_ITEM_ADICIONAL
			WHERE ID_ITEM = @ID_ITENS ORDER BY ID_ADICIONAL

		OPEN C_ADICIONAIS
		FETCH FIRST FROM C_ADICIONAIS INTO @ID_ADICIONAIS
		-- CURSOR FOR ITERATE ADICIONAIS FOR A ITEM IN STAGING
		WHILE @@FETCH_STATUS = 0
		BEGIN
			DECLARE C_GRUPO CURSOR FOR 
				SELECT DISTINCT(ID_GRUPO) FROM BRIDGE_ADICIONAL
			OPEN C_GRUPO
			FETCH C_GRUPO INTO @ID_GRUPO_BRIDGE

			-- CURSOR FOR ITERATE IN BRIDGE
			WHILE @@FETCH_STATUS = 0
			BEGIN
				IF (SELECT COUNT(BA.ID_ADICIONAL)
					FROM BRIDGE_ADICIONAL BA 
					WHERE BA.ID_GRUPO = @ID_GRUPO_BRIDGE) = @QTD_ADICIONAIS
				BEGIN
					DECLARE C_ADICIONAL_GRUPO CURSOR FOR 
						SELECT A.COD FROM BRIDGE_ADICIONAL BA 
							JOIN DIM_ADICIONAL A ON(A.ID = BA.ID_ADICIONAL)
						WHERE BA.ID_GRUPO = @ID_GRUPO_BRIDGE 
						ORDER BY A.COD
					OPEN C_ADICIONAL_GRUPO
					FETCH C_ADICIONAL_GRUPO INTO @ID_ADICIONAL_GRUPO
					SET @FLAG = 1

					-- CURSOR FOR ITERATE IN ADICIONAIS OF A BRIDGE
					WHILE @@FETCH_STATUS = 0
					BEGIN
						IF @ID_ADICIONAIS <> @ID_ADICIONAL_GRUPO
						BEGIN
							SET @FLAG = 0
							BREAK
						END

						FETCH NEXT FROM C_ADICIONAIS INTO @ID_ADICIONAIS
						FETCH C_ADICIONAL_GRUPO INTO @ID_ADICIONAL_GRUPO
					END

					CLOSE C_ADICIONAL_GRUPO
					DEALLOCATE C_ADICIONAL_GRUPO
				END

				IF @FLAG = 1
				BEGIN
					SET @FLAG = 0
					UPDATE FATO_VENDA
					SET ID_GRUPO_ADICIONAIS = @ID_GRUPO_BRIDGE
					WHERE COD_ITEM = @ID_ITENS
					BREAK
				END
				FETCH FIRST FROM C_ADICIONAIS INTO @ID_ADICIONAIS
				FETCH C_GRUPO INTO @ID_GRUPO_BRIDGE
			END

			CLOSE C_GRUPO
			DEALLOCATE C_GRUPO

			-- CASO NAO EXISTA NENHUM GRUPO INSERE 
			IF NOT EXISTS (SELECT * FROM BRIDGE_ADICIONAL) OR @FLAG = 0
			BEGIN
				SET @ID_GRUPO_ADICIONAL = NEXT VALUE FOR SQ_GRUPO_ADICIONAL
				INSERT INTO DIM_GRUPO_ADICIONAL(ID)
				VALUES(@ID_GRUPO_ADICIONAL)

				INSERT INTO BRIDGE_ADICIONAL(ID_GRUPO, ID_ADICIONAL)
				SELECT @ID_GRUPO_ADICIONAL, ID_ADICIONAL FROM AUX_ITEM_ADICIONAL WHERE ID_ITEM = @ID_ITENS
			END

			FETCH NEXT FROM C_ADICIONAIS INTO @ID_ADICIONAIS
		END

		CLOSE C_ADICIONAIS
		DEALLOCATE C_ADICIONAIS

		FETCH C_ITENS INTO @ID_ITENS
	END

	CLOSE C_ITENS
	DEALLOCATE C_ITENS
END

GO
SELECT * FROM FATO_VENDA V 
WHERE V.ID_PRODUTO IN (3,4,5,6) AND V.ID_GRUPO_ADICIONAIS IS NULL

SELECT * FROM DIM_GRUPO_ADICIONAL

EXEC SP_ETL_STAGING_TO_OLAP_BRIDGE_ADICIONAL

